#
#   Ticket Service Property
#
server.port=${port:9797}
service.log.level=${log.level:DEBUG}
seat.hold.expire.second=${expire.time:120}

# database configuration
spring.datasource.url=jdbc:h2:file:./ticket-service;AUTO_SERVER=TRUE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.continueOnError=true
spring.datasource.initialize=false

# JPA. Hibernate
spring.jpa.database=H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=choose one of [create-drop, create, update, validate, none]
spring.jpa.hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.show-sql=false
spring.data.jpa.repositories.enabled=true

# FLYWAY 
#flyway.*= # Any public property available on the auto-configured `Flyway` object
#flyway.check-location=false # check that migration scripts location exists
#flyway.locations=classpath:db/migration # locations of migrations scripts
#flyway.schemas= # schemas to update
#flyway.init-version= 1 # version to start migration
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it
#flyway.sql-migration-prefix=V
#flyway.sql-migration-suffix=.sql
#flyway.enabled=true
#flyway.url= # JDBC url if you want Flyway to create its own DataSource
#flyway.user= # JDBC username if you want Flyway to create its own DataSource
#flyway.password= # JDBC password if you want Flyway to create its own DataSource

# MANAGEMENT HTTP SERVER (ManagementServerProperties)
#management.port=8081
#management.address=127.0.0.1
#management.context-path=/management
#management.security.enabled=false

# MVC ONLY ENDPOINTS
#endpoints.jolokia.path=/jolokia
#endpoints.jolokia.sensitive=true
#endpoints.jolokia.enabled=true

# JMX ENDPOINT (EndpointMBeanExportProperties)
#endpoints.jmx.enabled=true
#endpoints.jmx.domain=org.springboot
#endpoints.jmx.unique-names=false

# ENDPOINT
#endpoints.enabled=true
#endpoints.beans.id=beans
#endpoints.beans.sensitive=true
#endpoints.beans.enabled=true
#endpoints.dump.id=dump
#endpoints.dump.sensitive=true
#endpoints.dump.enabled=true
#endpoints.health.id=health
#endpoints.health.sensitive=true
#endpoints.health.enabled=true
#endpoints.shutdown.id=shutdown
#endpoints.shutdown.sensitive=true
#endpoints.shutdown.enabled=true

# HYPERMEDIA ENDPOINTS
#endpoints.actuator.enabled=true
#endpoints.actuator.path=/actuator
#endpoints.actuator.sensitive=false
#endpoints.flyway.id=flyway
#endpoints.flyway.sensitive=true
#endpoints.flyway.enabled=true
#endpoints.liquibase.enabled=true
#endpoints.liquibase.id=liquibase
#endpoints.liquibase.sensitive=false

# ENDPOINTS CORS CONFIGURATION (MvcEndpointCorsProperties)
#endpoints.cors.allow-credentials= 
#endpoints.cors.allowed-origins= *
#endpoints.cors.allowed-methods= *
#endpoints.cors.allowed-headers= *
#endpoints.cors.exposed-headers=
#endpoints.cors.max-age=1800

# client logging level
logging.level.com.walmart.ticketservice: ${service.log.level}
logging.level.org.springframework: ERROR
logging.level.org.hibernate: ERROR
logging.level.org.eclipse.jetty: ERROR
